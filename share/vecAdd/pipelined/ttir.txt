#loc = loc("/home/hoy/triton/python/tutorials/01-vector-add.py":35:0)
module {
  tt.func public @add_kernel_0d1d2d3de(%arg0: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/hoy/triton/python/tutorials/01-vector-add.py":35:0), %arg1: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/hoy/triton/python/tutorials/01-vector-add.py":35:0), %arg2: !tt.ptr<f32, 1> {tt.divisibility = 16 : i32} loc("/home/hoy/triton/python/tutorials/01-vector-add.py":35:0), %arg3: i32 {tt.divisibility = 16 : i32, tt.max_divisibility = 16 : i32} loc("/home/hoy/triton/python/tutorials/01-vector-add.py":35:0)) attributes {noinline = false} {
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c2048_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32> loc(#loc4)
    %3 = tt.splat %arg3 : (i32) -> tensor<512xi32> loc(#loc5)
    %4 = tt.splat %arg0 : (!tt.ptr<f32, 1>) -> tensor<512x!tt.ptr<f32, 1>> loc(#loc6)
    %5 = tt.splat %arg1 : (!tt.ptr<f32, 1>) -> tensor<512x!tt.ptr<f32, 1>> loc(#loc7)
    %6 = tt.splat %arg2 : (!tt.ptr<f32, 1>) -> tensor<512x!tt.ptr<f32, 1>> loc(#loc8)
    scf.for %arg4 = %c0_i32 to %c2048_i32 step %c512_i32  : i32 {
      %7 = arith.addi %1, %arg4 : i32 loc(#loc10)
      %8 = tt.splat %7 : (i32) -> tensor<512xi32> loc(#loc11)
      %9 = arith.addi %8, %2 : tensor<512xi32> loc(#loc11)
      %10 = arith.cmpi slt, %9, %3 : tensor<512xi32> loc(#loc5)
      %11 = tt.addptr %4, %9 : tensor<512x!tt.ptr<f32, 1>>, tensor<512xi32> loc(#loc6)
      %12 = tt.load %11, %10 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : tensor<512xf32> loc(#loc12)
      %13 = tt.addptr %5, %9 : tensor<512x!tt.ptr<f32, 1>>, tensor<512xi32> loc(#loc7)
      %14 = tt.load %13, %10 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : tensor<512xf32> loc(#loc13)
      %15 = arith.addf %12, %14 : tensor<512xf32> loc(#loc14)
      %16 = tt.addptr %6, %9 : tensor<512x!tt.ptr<f32, 1>>, tensor<512xi32> loc(#loc8)
      tt.store %16, %15, %10 {cache = 1 : i32, evict = 1 : i32} : tensor<512xf32> loc(#loc15)
    } loc(#loc9)
    tt.return loc(#loc16)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/home/hoy/triton/python/tutorials/01-vector-add.py":45:24)
#loc3 = loc("/home/hoy/triton/python/tutorials/01-vector-add.py":50:24)
#loc4 = loc("/home/hoy/triton/python/tutorials/01-vector-add.py":52:54)
#loc5 = loc("/home/hoy/triton/python/tutorials/01-vector-add.py":54:25)
#loc6 = loc("/home/hoy/triton/python/tutorials/01-vector-add.py":57:28)
#loc7 = loc("/home/hoy/triton/python/tutorials/01-vector-add.py":58:28)
#loc8 = loc("/home/hoy/triton/python/tutorials/01-vector-add.py":61:30)
#loc9 = loc("/home/hoy/triton/python/tutorials/01-vector-add.py":51:39)
#loc10 = loc("/home/hoy/triton/python/tutorials/01-vector-add.py":52:32)
#loc11 = loc("/home/hoy/triton/python/tutorials/01-vector-add.py":52:41)
#loc12 = loc("/home/hoy/triton/python/tutorials/01-vector-add.py":57:20)
#loc13 = loc("/home/hoy/triton/python/tutorials/01-vector-add.py":58:20)
#loc14 = loc("/home/hoy/triton/python/tutorials/01-vector-add.py":59:21)
#loc15 = loc("/home/hoy/triton/python/tutorials/01-vector-add.py":61:39)
#loc16 = loc("/home/hoy/triton/python/tutorials/01-vector-add.py":51:4)
